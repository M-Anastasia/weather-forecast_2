{"version":3,"sources":["components/seven_days_weather_forecast/seven_days_weather_forecast.module.css","components/past_day_weather_forecast/past_day_weather_forecast.module.css","constants/datepicker/datepicker.module.css","constants/select/select.module.css","icons/Academy-Weather forecast-Bg-up.svg","icons/Academy-Weather forecast-Bg-buttom.svg","constants/datepicker/Datepicker.tsx","icons/Academy-Weather-bg160.svg","constants/select/Select.tsx","components/past_day_weather_forecast/PastDayWeatherForecast.tsx","icons/arrow-left.svg","icons/arrow-right.svg","components/seven_days_weather_forecast/SevenDaysWeatherForecast.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Datepicker","props","useState","placeholder","date","setDate","dateFormat","require","yesterday","Date","getDate","sixthDayBefore","max","min","className","styles","shift_datepicker","onChange","target","value","setIsDatePicked","setIsRequestDone","s","datepicker","type","onFocusCapture","event","style","borderColor","outline","onBlur","border","datepicker_text","Select","pikedCity","setPikedCity","useEffect","Options","options","map","option","onClick","console","log","setIsCityPiked","getData","shift_options","shift","isCityPiked","piked","unpicked","PastDayWeatherForecast","months","cities","setCities","isDatePicked","data","setData","lat","setLat","lon","setLon","isRequestDone","push","Card","cards_layout","card","weather_icon","src","temp","Content","fetch","getTime","method","then","response","json","dataArray","current","dt","weatherIcon","weather","icon","replace","getMonth","getFullYear","Math","round","cloud","error_msg","background","title","inputs_layout","SevenDaysWeatherForecast","start","setStart","end","setEnd","windowSize","width","height","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","Cards","cards","i","undefined","arrow_left_dis","arrow_left","ArrowLeft","arrow_right_dis","arrow_right","ArrowRight","daily","day","App","up","bottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83a62cb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"seven_days_weather_forecast_background__2CWPt\",\"title\":\"seven_days_weather_forecast_title__XnAyU\",\"shift\":\"seven_days_weather_forecast_shift__Fo9-A\",\"shift_options\":\"seven_days_weather_forecast_shift_options__FZ8eO\",\"error_msg\":\"seven_days_weather_forecast_error_msg__1zLUU\",\"cards_layout\":\"seven_days_weather_forecast_cards_layout__ZyRKX\",\"cloud\":\"seven_days_weather_forecast_cloud__28RNb\",\"arrow_left\":\"seven_days_weather_forecast_arrow_left__2UVW6\",\"arrow_left_dis\":\"seven_days_weather_forecast_arrow_left_dis__35jJf\",\"arrow_right\":\"seven_days_weather_forecast_arrow_right__JSdYN\",\"arrow_right_dis\":\"seven_days_weather_forecast_arrow_right_dis__3ZX3-\",\"radios\":\"seven_days_weather_forecast_radios___WSce\",\"list\":\"seven_days_weather_forecast_list__1IknZ\",\"select_placeholder\":\"seven_days_weather_forecast_select_placeholder__lQwDv\",\"card\":\"seven_days_weather_forecast_card__3CrQ1\",\"date\":\"seven_days_weather_forecast_date__M8Fcu\",\"weather_icon\":\"seven_days_weather_forecast_weather_icon__2M8-s\",\"temp\":\"seven_days_weather_forecast_temp__19F48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"past_day_weather_forecast_background__37ow9\",\"title\":\"past_day_weather_forecast_title__2Vyzk\",\"shift\":\"past_day_weather_forecast_shift__1Ya_u\",\"shift_options\":\"past_day_weather_forecast_shift_options__vPeFe\",\"shift_datepicker\":\"past_day_weather_forecast_shift_datepicker__2I84Z\",\"inputs_layout\":\"past_day_weather_forecast_inputs_layout__189Uv\",\"select_placeholder\":\"past_day_weather_forecast_select_placeholder__1tCqj\",\"cloud\":\"past_day_weather_forecast_cloud__gOJAK\",\"error_msg\":\"past_day_weather_forecast_error_msg__16c1f\",\"cards_layout\":\"past_day_weather_forecast_cards_layout__2sgOD\",\"card\":\"past_day_weather_forecast_card__2GL2M\",\"date\":\"past_day_weather_forecast_date__bh-MP\",\"weather_icon\":\"past_day_weather_forecast_weather_icon__1k0P8\",\"temp\":\"past_day_weather_forecast_temp__hIx9j\",\"arrow_left\":\"past_day_weather_forecast_arrow_left__2W5Bg\",\"arrow_left_dis\":\"past_day_weather_forecast_arrow_left_dis__1vG5u\",\"arrow_right\":\"past_day_weather_forecast_arrow_right__2FwMO\",\"arrow_right_dis\":\"past_day_weather_forecast_arrow_right_dis__r9152\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datepicker\":\"datepicker_datepicker__3Nt-3\",\"datepicker_text\":\"datepicker_datepicker_text__2xUM9\",\"datepicker_text_none\":\"datepicker_datepicker_text_none__1MGZa\",\"focused\":\"datepicker_focused__13y61\",\"img_shift\":\"datepicker_img_shift__aXqmw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"piked\":\"select_piked__1KolB\",\"unpicked\":\"select_unpicked__DWC3v\"};","export default __webpack_public_path__ + \"static/media/Academy-Weather forecast-Bg-up.cd559f48.svg\";","export default __webpack_public_path__ + \"static/media/Academy-Weather forecast-Bg-buttom.ed5c739e.svg\";","import React, {useState} from 'react';\nimport s from './datepicker.module.css';\n\n// @ts-ignore\nexport const Datepicker = props => {\n\n    const [date, setDate] = useState(props.placeholder);\n\n    const dateFormat = require('dateformat');\n    const yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\n    const sixthDayBefore = new Date(new Date().setDate(new Date().getDate() - 5));\n    const max = dateFormat(yesterday, \"yyyy-mm-dd\");\n    const min = dateFormat(sixthDayBefore, \"yyyy-mm-dd\");\n\n    const handleInputChange = (target: any) => {\n        setDate(target.target.value);\n        props.setIsDatePicked(true);\n        props.setDate(target.target.value);\n        props.setIsRequestDone(false);\n    }\n\n    return (\n        <div className={props.styles.shift_datepicker}>\n            <input onChange={handleInputChange} className={s.datepicker} type='date' placeholder={props.placeholder}\n                   max={max}\n                   min={min}\n                   onFocusCapture={event => {\n                       event.target.style.borderColor = '#373AF5';\n                       event.target.style.outline = '0';\n\n                   }}\n                   onBlur={event => event.target.style.border = '2px solid rgba(128, 131, 164, 0.2)'}\n            />\n            <p className={s.datepicker_text}>{date === props.placeholder ? date : dateFormat(date, \"dd/mm/yyyy\")}</p>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/Academy-Weather-bg160.ab35eb6a.svg\";","import React, {useEffect, useState} from 'react';\nimport s from './select.module.css';\n\n// @ts-ignore\nexport const Select = props => {\n\n    const [pikedCity, setPikedCity] = useState('');\n\n    useEffect(() => {\n        setPikedCity(props.placeholder);\n    }, []);\n\n    const Options = () => {\n        const options = props.options.map((option: any) =>\n            <li onClick={() => {\n                console.log(option[0] + ' was clicked' + option[1] + option[2]);\n                setPikedCity(option[0]);\n                props.setIsCityPiked(true);\n                props.getData(option[1], option[2]);\n            }}>{option[0]}</li>\n        );\n        return <ul className={props.styles.shift_options}>{options}</ul>;\n    }\n\n    return (\n        <details className={props.styles.shift}>\n            <summary className={props.isCityPiked ? s.piked : s.unpicked}>\n                {pikedCity}\n            </summary>\n            <Options/>\n        </details>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport s from \"./past_day_weather_forecast.module.css\";\nimport {Datepicker} from \"../../constants/datepicker/Datepicker\";\nimport cloud from \"../../icons/Academy-Weather-bg160.svg\";\nimport {Select} from \"../../constants/select/Select\";\n\nexport const PastDayWeatherForecast = () => {\n\n    const months = ['jan', 'feb', 'mar', 'apr', 'may', 'june', 'july', 'aug', 'sept', 'oct', 'nov', 'dec'];\n    const [cities, setCities] = useState([]);\n    const [isCityPiked, setIsCityPiked] = useState(false);\n    const [isDatePicked, setIsDatePicked] = useState(false);\n    const [date, setDate] = useState('');\n    const [data, setData] = useState([\"\",\"\",\"\"]);\n    const [lat, setLat] = useState(0);\n    const [lon, setLon] = useState(0);\n    const [isRequestDone, setIsRequestDone] = useState(false);\n\n    useEffect(() => {\n        let cities: any = [];\n        cities.push(['Самара', 53.195873, 50.100193]);\n        cities.push(['Тольятти', 53.507836, 49.420393]);\n        cities.push(['Саратов', 51.533557, 46.034257]);\n        cities.push(['Казань', 55.796127, 49.106405]);\n        cities.push(['Краснодар', 45.035470, 38.975313]);\n        setCities(cities);\n    }, []);\n\n    const getData = (lat: number, lon: number) => {\n        setLat(lat);\n        setLon(lon);\n        setIsRequestDone(false);\n    }\n\n    const Card = () => {\n        return (\n            <div className={s.cards_layout}>\n                <div className={s.card}>\n                    <p className={s.date}>{data[0][0]}</p>\n                    <img className={s.weather_icon} src={data[0][1]}/>\n                    <p className={s.temp}>{data[0][2]}</p>\n                </div>\n            </div>\n        );\n    }\n\n    const Content = () => {\n        if (!isCityPiked || !isDatePicked) {\n            return (\n                <div>\n                    <img className={s.cloud} src={cloud}/>\n                    <p className={s.error_msg}>Fill in all the fields and the weather will be displayed</p>\n                </div>\n            )\n        } else {\n            if(!isRequestDone) {\n                fetch('https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=' + lat + '&lon=' + lon + '&dt=' + new Date(date).getTime() / 1000 + '&appid=aafdb5f809e160cf1aea4d8d0e4107bf', {\n                    method: 'GET',\n                })\n                    .then(function (response) {\n                        console.log(response);\n                        return response.json();\n                    })\n                    .then(function (data) {\n                        console.log(data);\n                        let dataArray: any = [];\n                        const date = new Date(data.current.dt * 1000);\n                        console.log(date);\n                        const weatherIcon = data.current.weather[0].icon.replace('n','d');\n                        dataArray.push([\n                            date.getDate() + ' ' + months[date.getMonth()] + ' ' + date.getFullYear(),\n                            \"http://openweathermap.org/img/wn/\" + weatherIcon + \"@2x.png\",\n                            (Math.round(data.current.temp - 273.15) > 0 ? '+' + Math.round(data.current.temp - 273.15) + '°' : '-' + Math.round(data.current.temp - 273.15) + '°')]);\n                        setData(dataArray);\n                        setIsRequestDone(true)\n                    });\n            }\n            return (\n                <Card />\n            )\n        }\n\n    }\n\n    return (\n        <div className={s.background}>\n            <p className={s.title}>Forecast for a Date in the Past</p>\n            <div className={s.inputs_layout}>\n                <Select styles={s} placeholder=\"Select city\" options={cities} isCityPiked={isCityPiked}\n                        setIsCityPiked={setIsCityPiked} getData={getData}/>\n                <Datepicker placeholder=\"Select date\" styles={s} isDatePicked={isDatePicked}\n                            setIsDatePicked={setIsDatePicked}\n                            setDate={setDate} setIsRequestDone={setIsRequestDone}/>\n            </div>\n            <Content/>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/arrow-left.b2c3c590.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right.36837e88.svg\";","import React, {useEffect, useState} from 'react';\nimport s from \"./seven_days_weather_forecast.module.css\";\nimport cloud from \"../../icons/Academy-Weather-bg160.svg\";\nimport {Select} from \"../../constants/select/Select\";\nimport ArrowLeft from \"../../icons/arrow-left.svg\";\nimport ArrowRight from \"../../icons/arrow-right.svg\";\n\nexport const SevenDaysWeatherForecast = () => {\n\n    const [cities, setCities] = useState([]);\n    const [isCityPiked, setIsCityPiked] = useState(false);\n    const [data, setData] = useState([[]]);\n    const [start, setStart] = useState(0);\n    const [end, setEnd] = useState(2);\n    const windowSize = useWindowSize();\n\n    const months = ['jan', 'feb', 'mar', 'apr', 'may', 'june', 'july', 'aug', 'sept', 'oct', 'nov', 'dec'];\n\n    useEffect(() => {\n        let cities: any = [];\n        cities.push(['Самара', 53.195873, 50.100193]);\n        cities.push(['Тольятти', 53.507836, 49.420393]);\n        cities.push(['Саратов', 51.533557, 46.034257]);\n        cities.push(['Казань', 55.796127, 49.106405]);\n        cities.push(['Краснодар', 45.035470, 38.975313]);\n        setCities(cities);\n    }, []);\n\n    const getData = (lat: number, lon: number) => {\n        fetch('https://api.openweathermap.org/data/2.5/onecall?lat=' + lat + '&lon=' + lon + '&appid=aafdb5f809e160cf1aea4d8d0e4107bf', {\n            method: 'GET',\n        })\n            .then(function (response) {\n                // console.log(response);\n                return response.json();\n            })\n            .then(function (data) {\n                // console.log(data);\n                let dataArray: any = [];\n                [1, 2, 3, 4, 5, 6, 7].map((i) => {\n                        const date = new Date(data.daily[i].dt * 1000);\n                        // console.log(date);\n                        dataArray.push([\n                            date.getDate() + ' ' + months[date.getMonth()] + ' ' + date.getFullYear(),\n                            \"http://openweathermap.org/img/wn/\" + data.daily[i].weather[0].icon + \"@2x.png\",\n                            (Math.round(data.daily[i].temp.day - 273.15) > 0 ? '+' + Math.round(data.daily[i].temp.day - 273.15) + '°' : '-' + Math.round(data.daily[i].temp.day - 273.15) + '°')])\n                    }\n                );\n                setData(dataArray);\n            });\n    }\n\n    const Cards = () => {\n        const cards: any = [];\n        if (windowSize.width <= 660) {\n            [0, 1, 2, 3, 4, 5, 6].map((i) => {\n                    if (data[i] !== undefined) {\n                        cards.push(<div className={s.card}>\n                            <p className={s.date}>{data[i][0]}</p>\n                            <img className={s.weather_icon} src={data[i][1]}/>\n                            <p className={s.temp}>{data[i][2]}</p>\n                        </div>)\n                    }\n                }\n            );\n        } else {\n            [start, end - 1, end].map((i) => {\n                    if (data[i] !== undefined) {\n                        cards.push(<div className={s.card}>\n                            <p className={s.date}>{data[i][0]}</p>\n                            <img className={s.weather_icon} src={data[i][1]}/>\n                            <p className={s.temp}>{data[i][2]}</p>\n                        </div>)\n                    }\n                }\n            );\n        }\n        return (\n            <div className={s.cards_layout}>\n                <img className={(start === 0) ? s.arrow_left_dis : s.arrow_left} src={ArrowLeft} onClick={() => {\n                    setStart(start - 1);\n                    setEnd(end - 1);\n                }}/>\n                {cards}\n                <img className={(end === 6) ? s.arrow_right_dis : s.arrow_right} src={ArrowRight} onClick={() => {\n                    setStart(start + 1);\n                    setEnd(end + 1);\n                }}/>\n            </div>\n        );\n    }\n\n    const Content = () => {\n        if (!isCityPiked) {\n            return (\n                <div>\n                    <img className={s.cloud} src={cloud}/>\n                    <p className={s.error_msg}>Fill in all the fields and the weather will be displayed</p>\n                </div>\n            )\n        } else return (\n            <Cards/>\n        )\n    }\n\n    return (\n        <div className={s.background}>\n            <p className={s.title}>7 Days Forecast</p>\n            <Select styles={s} placeholder=\"Select city\" options={cities} isCityPiked={isCityPiked}\n                    setIsCityPiked={setIsCityPiked} getData={getData}/>\n            <Content/>\n        </div>\n    )\n}\n\nfunction useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: 0,\n        height: 0,\n    });\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n}","import React from 'react';\nimport './App.css';\nimport up from './icons/Academy-Weather forecast-Bg-up.svg';\nimport bottom from './icons/Academy-Weather forecast-Bg-buttom.svg';\nimport {PastDayWeatherForecast} from \"./components/past_day_weather_forecast/PastDayWeatherForecast\";\nimport {SevenDaysWeatherForecast} from \"./components/seven_days_weather_forecast/SevenDaysWeatherForecast\";\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <img className=\"up\" src={up}/>\n            <img className=\"bottom\" src={bottom}/>\n            <div className=\"layout\">\n                <header className=\"header\">\n                    <div className=\"header-font1\">Weather</div>\n                    <div className=\"header-font2\">forecast</div>\n                </header>\n                <main className=\"main\">\n                    <SevenDaysWeatherForecast/>\n                    <PastDayWeatherForecast/>\n                </main>\n                <footer className=\"footer\">\n                    <p className=\"footer-font\">C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</p>\n                </footer>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}